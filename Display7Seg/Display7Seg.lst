;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 07/05/2025 11:35:43
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF20  	GOTO        576
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Div_16x16_S_L:
;__Lib_Math.c,139 :: 		
;__Lib_Math.c,146 :: 		
0x001C	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,147 :: 		
0x001E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,148 :: 		
0x0020	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,149 :: 		
0x0022	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,150 :: 		
0x0024	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,151 :: 		
0x0026	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,152 :: 		
0x0028	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,153 :: 		
0x002A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,154 :: 		
0x002C	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,155 :: 		
0x002E	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,156 :: 		
0x0030	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,158 :: 		
0x0032	0x0E0F      	MOVLW       15
;__Lib_Math.c,159 :: 		
0x0034	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,161 :: 		
0x0036	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,162 :: 		
0x0038	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,163 :: 		
0x003A	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,164 :: 		
0x003C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,166 :: 		
0x003E	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,167 :: 		
0x0040	0xD006      	BRA         $+14
;__Lib_Math.c,168 :: 		
0x0042	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,169 :: 		
0x0044	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,170 :: 		
0x0046	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,171 :: 		
0x0048	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,172 :: 		
0x004A	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,173 :: 		
0x004C	0xD005      	BRA         $+12
;__Lib_Math.c,175 :: 		
0x004E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,176 :: 		
0x0050	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,177 :: 		
0x0052	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,178 :: 		
0x0054	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,179 :: 		
0x0056	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,181 :: 		
0x0058	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,182 :: 		
0x005A	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,184 :: 		
0x005C	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,185 :: 		
0x005E	0xD7EB      	BRA         $-40
;__Lib_Math.c,187 :: 		
0x0060	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,188 :: 		
0x0062	0xD006      	BRA         $+14
;__Lib_Math.c,189 :: 		
0x0064	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,190 :: 		
0x0066	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,191 :: 		
0x0068	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,192 :: 		
0x006A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,193 :: 		
0x006C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,194 :: 		
0x006E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,195 :: 		
0x0070	0x0000      	NOP
;__Lib_Math.c,197 :: 		
L_end_Div_16x16_S_L:
0x0072	0x0012      	RETURN      0
; end of _Div_16x16_S_L
_mask:
;Display7Seg.c,25 :: 		unsigned short mask(unsigned short num) {
;Display7Seg.c,26 :: 		switch (num) {
0x0074	0xD01E      	BRA         L_mask0
;Display7Seg.c,27 :: 		case 0 : return 0x3F;
L_mask2:
0x0076	0x0E3F      	MOVLW       63
0x0078	0x6E00      	MOVWF       R0 
0x007A	0xD039      	BRA         L_end_mask
;Display7Seg.c,28 :: 		case 1 : return 0x06;
L_mask3:
0x007C	0x0E06      	MOVLW       6
0x007E	0x6E00      	MOVWF       R0 
0x0080	0xD036      	BRA         L_end_mask
;Display7Seg.c,29 :: 		case 2 : return 0x5B;
L_mask4:
0x0082	0x0E5B      	MOVLW       91
0x0084	0x6E00      	MOVWF       R0 
0x0086	0xD033      	BRA         L_end_mask
;Display7Seg.c,30 :: 		case 3 : return 0x4F;
L_mask5:
0x0088	0x0E4F      	MOVLW       79
0x008A	0x6E00      	MOVWF       R0 
0x008C	0xD030      	BRA         L_end_mask
;Display7Seg.c,31 :: 		case 4 : return 0x66;
L_mask6:
0x008E	0x0E66      	MOVLW       102
0x0090	0x6E00      	MOVWF       R0 
0x0092	0xD02D      	BRA         L_end_mask
;Display7Seg.c,32 :: 		case 5 : return 0x6D;
L_mask7:
0x0094	0x0E6D      	MOVLW       109
0x0096	0x6E00      	MOVWF       R0 
0x0098	0xD02A      	BRA         L_end_mask
;Display7Seg.c,33 :: 		case 6 : return 0x7D;
L_mask8:
0x009A	0x0E7D      	MOVLW       125
0x009C	0x6E00      	MOVWF       R0 
0x009E	0xD027      	BRA         L_end_mask
;Display7Seg.c,34 :: 		case 7 : return 0x07;
L_mask9:
0x00A0	0x0E07      	MOVLW       7
0x00A2	0x6E00      	MOVWF       R0 
0x00A4	0xD024      	BRA         L_end_mask
;Display7Seg.c,35 :: 		case 8 : return 0x7F;
L_mask10:
0x00A6	0x0E7F      	MOVLW       127
0x00A8	0x6E00      	MOVWF       R0 
0x00AA	0xD021      	BRA         L_end_mask
;Display7Seg.c,36 :: 		case 9 : return 0x6F;
L_mask11:
0x00AC	0x0E6F      	MOVLW       111
0x00AE	0x6E00      	MOVWF       R0 
0x00B0	0xD01E      	BRA         L_end_mask
;Display7Seg.c,37 :: 		}
L_mask0:
0x00B2	0x5023      	MOVF        FARG_mask_num, 0 
0x00B4	0x0A00      	XORLW       0
0x00B6	0xE0DF      	BZ          L_mask2
0x00B8	0x5023      	MOVF        FARG_mask_num, 0 
0x00BA	0x0A01      	XORLW       1
0x00BC	0xE0DF      	BZ          L_mask3
0x00BE	0x5023      	MOVF        FARG_mask_num, 0 
0x00C0	0x0A02      	XORLW       2
0x00C2	0xE0DF      	BZ          L_mask4
0x00C4	0x5023      	MOVF        FARG_mask_num, 0 
0x00C6	0x0A03      	XORLW       3
0x00C8	0xE0DF      	BZ          L_mask5
0x00CA	0x5023      	MOVF        FARG_mask_num, 0 
0x00CC	0x0A04      	XORLW       4
0x00CE	0xE0DF      	BZ          L_mask6
0x00D0	0x5023      	MOVF        FARG_mask_num, 0 
0x00D2	0x0A05      	XORLW       5
0x00D4	0xE0DF      	BZ          L_mask7
0x00D6	0x5023      	MOVF        FARG_mask_num, 0 
0x00D8	0x0A06      	XORLW       6
0x00DA	0xE0DF      	BZ          L_mask8
0x00DC	0x5023      	MOVF        FARG_mask_num, 0 
0x00DE	0x0A07      	XORLW       7
0x00E0	0xE0DF      	BZ          L_mask9
0x00E2	0x5023      	MOVF        FARG_mask_num, 0 
0x00E4	0x0A08      	XORLW       8
0x00E6	0xE0DF      	BZ          L_mask10
0x00E8	0x5023      	MOVF        FARG_mask_num, 0 
0x00EA	0x0A09      	XORLW       9
0x00EC	0xE0DF      	BZ          L_mask11
;Display7Seg.c,38 :: 		}
L_end_mask:
0x00EE	0x0012      	RETURN      0
; end of _mask
_escreve4Displays:
;Display7Seg.c,40 :: 		void escreve4Displays(int num1, int num2, int num3, int num4) {
;Display7Seg.c,41 :: 		PORTD = mask(num1);
0x00F0	0xF023C01B  	MOVFF       FARG_escreve4Displays_num1, FARG_mask_num
0x00F4	0xDFBF      	RCALL       _mask
0x00F6	0xFF83C000  	MOVFF       R0, PORTD
;Display7Seg.c,42 :: 		porta.f2 = 1;     // Ativa display 1.
0x00FA	0x8480      	BSF         PORTA, 2 
;Display7Seg.c,43 :: 		Delay_ms(tempo);
0x00FC	0x0E0D      	MOVLW       13
0x00FE	0x6E0C      	MOVWF       R12, 0
0x0100	0x0EFB      	MOVLW       251
0x0102	0x6E0D      	MOVWF       R13, 0
L_escreve4Displays12:
0x0104	0x2E0D      	DECFSZ      R13, 1, 0
0x0106	0xD7FE      	BRA         L_escreve4Displays12
0x0108	0x2E0C      	DECFSZ      R12, 1, 0
0x010A	0xD7FC      	BRA         L_escreve4Displays12
0x010C	0x0000      	NOP
0x010E	0x0000      	NOP
;Display7Seg.c,44 :: 		porta.f2 = 0;     // Desativa display 1.
0x0110	0x9480      	BCF         PORTA, 2 
;Display7Seg.c,47 :: 		PORTD = mask(num2);
0x0112	0xF023C01D  	MOVFF       FARG_escreve4Displays_num2, FARG_mask_num
0x0116	0xDFAE      	RCALL       _mask
0x0118	0xFF83C000  	MOVFF       R0, PORTD
;Display7Seg.c,48 :: 		porta.f3 = 1;     // Ativa display 2.
0x011C	0x8680      	BSF         PORTA, 3 
;Display7Seg.c,49 :: 		Delay_ms(tempo);
0x011E	0x0E0D      	MOVLW       13
0x0120	0x6E0C      	MOVWF       R12, 0
0x0122	0x0EFB      	MOVLW       251
0x0124	0x6E0D      	MOVWF       R13, 0
L_escreve4Displays13:
0x0126	0x2E0D      	DECFSZ      R13, 1, 0
0x0128	0xD7FE      	BRA         L_escreve4Displays13
0x012A	0x2E0C      	DECFSZ      R12, 1, 0
0x012C	0xD7FC      	BRA         L_escreve4Displays13
0x012E	0x0000      	NOP
0x0130	0x0000      	NOP
;Display7Seg.c,50 :: 		porta.f3 = 0;     // Desativa display 2.
0x0132	0x9680      	BCF         PORTA, 3 
;Display7Seg.c,53 :: 		PORTD = mask(num3);
0x0134	0xF023C01F  	MOVFF       FARG_escreve4Displays_num3, FARG_mask_num
0x0138	0xDF9D      	RCALL       _mask
0x013A	0xFF83C000  	MOVFF       R0, PORTD
;Display7Seg.c,54 :: 		porta.f4 = 1;     // Ativa display 3.
0x013E	0x8880      	BSF         PORTA, 4 
;Display7Seg.c,55 :: 		Delay_ms(tempo);
0x0140	0x0E0D      	MOVLW       13
0x0142	0x6E0C      	MOVWF       R12, 0
0x0144	0x0EFB      	MOVLW       251
0x0146	0x6E0D      	MOVWF       R13, 0
L_escreve4Displays14:
0x0148	0x2E0D      	DECFSZ      R13, 1, 0
0x014A	0xD7FE      	BRA         L_escreve4Displays14
0x014C	0x2E0C      	DECFSZ      R12, 1, 0
0x014E	0xD7FC      	BRA         L_escreve4Displays14
0x0150	0x0000      	NOP
0x0152	0x0000      	NOP
;Display7Seg.c,56 :: 		porta.f4 = 0;     // Desativa display 3.
0x0154	0x9880      	BCF         PORTA, 4 
;Display7Seg.c,59 :: 		PORTD = mask(num4);
0x0156	0xF023C021  	MOVFF       FARG_escreve4Displays_num4, FARG_mask_num
0x015A	0xDF8C      	RCALL       _mask
0x015C	0xFF83C000  	MOVFF       R0, PORTD
;Display7Seg.c,60 :: 		porta.f5 = 1;     // Ativa display 4.
0x0160	0x8A80      	BSF         PORTA, 5 
;Display7Seg.c,61 :: 		Delay_ms(tempo);
0x0162	0x0E0D      	MOVLW       13
0x0164	0x6E0C      	MOVWF       R12, 0
0x0166	0x0EFB      	MOVLW       251
0x0168	0x6E0D      	MOVWF       R13, 0
L_escreve4Displays15:
0x016A	0x2E0D      	DECFSZ      R13, 1, 0
0x016C	0xD7FE      	BRA         L_escreve4Displays15
0x016E	0x2E0C      	DECFSZ      R12, 1, 0
0x0170	0xD7FC      	BRA         L_escreve4Displays15
0x0172	0x0000      	NOP
0x0174	0x0000      	NOP
;Display7Seg.c,62 :: 		porta.f5 = 0;     // desativa display 4.
0x0176	0x9A80      	BCF         PORTA, 5 
;Display7Seg.c,63 :: 		}
L_end_escreve4Displays:
0x0178	0x0012      	RETURN      0
; end of _escreve4Displays
_Div_16x16_S:
;__Lib_Math.c,200 :: 		
;__Lib_Math.c,208 :: 		
0x017A	0x5004      	MOVF        R4, 0 
0x017C	0x0A00      	XORLW       0
0x017E	0xE108      	BNZ         L_Div_16x16_S0
;__Lib_Math.c,209 :: 		
0x0180	0x5005      	MOVF        R5, 0 
0x0182	0x0A00      	XORLW       0
0x0184	0xE105      	BNZ         L_Div_16x16_S1
;__Lib_Math.c,210 :: 		
0x0186	0x0EFF      	MOVLW       255
0x0188	0x6E00      	MOVWF       R0 
;__Lib_Math.c,211 :: 		
0x018A	0x0E7F      	MOVLW       127
0x018C	0x6E01      	MOVWF       R1 
;__Lib_Math.c,212 :: 		
0x018E	0xD057      	BRA         L_end_Div_16x16_S
;__Lib_Math.c,213 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,216 :: 		
0x0190	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,217 :: 		
0x0192	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,218 :: 		
0x0194	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,219 :: 		
0x0196	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,220 :: 		
0x0198	0x1000      	IORWF       R0, 0, 0
;__Lib_Math.c,221 :: 		
0x019A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,222 :: 		
0x019C	0x0C00      	RETLW       0
;__Lib_Math.c,224 :: 		
0x019E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,225 :: 		
0x01A0	0x1805      	XORWF       R5, 0, 0
;__Lib_Math.c,226 :: 		
0x01A2	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,227 :: 		
0x01A4	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,228 :: 		
0x01A6	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,230 :: 		
0x01A8	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,232 :: 		
0x01AA	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,233 :: 		
0x01AC	0xD005      	BRA         $+12
;__Lib_Math.c,235 :: 		
0x01AE	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,236 :: 		
0x01B0	0x1E05      	COMF        R5, 1, 0
;__Lib_Math.c,237 :: 		
0x01B2	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,238 :: 		
0x01B4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,239 :: 		
0x01B6	0x2A05      	INCF        R5, 1, 0
;__Lib_Math.c,241 :: 		
0x01B8	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,242 :: 		
0x01BA	0xD005      	BRA         $+12
;__Lib_Math.c,244 :: 		
0x01BC	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,245 :: 		
0x01BE	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,246 :: 		
0x01C0	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,247 :: 		
0x01C2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,248 :: 		
0x01C4	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,250 :: 		
0x01C6	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,251 :: 		
0x01C8	0x1005      	IORWF       R5, 0, 0
;__Lib_Math.c,252 :: 		
0x01CA	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,253 :: 		
0x01CC	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,254 :: 		
0x01CE	0xD010      	BRA         $+34
;__Lib_Math.c,256 :: 		
0x01D0	0xDF25      	RCALL       _Div_16x16_S_L
;__Lib_Math.c,258 :: 		
0x01D2	0xB00B      	BTFSC       R11, 0, 0
;__Lib_Math.c,259 :: 		
0x01D4	0xD020      	BRA         $+66
;__Lib_Math.c,261 :: 		
0x01D6	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,262 :: 		
0x01D8	0x0C00      	RETLW       0
;__Lib_Math.c,264 :: 		
0x01DA	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,265 :: 		
0x01DC	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,266 :: 		
0x01DE	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,267 :: 		
0x01E0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,268 :: 		
0x01E2	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,270 :: 		
0x01E4	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,271 :: 		
0x01E6	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,272 :: 		
0x01E8	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,273 :: 		
0x01EA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,274 :: 		
0x01EC	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,276 :: 		
0x01EE	0x0C00      	RETLW       0
;__Lib_Math.c,278 :: 		
0x01F0	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,279 :: 		
0x01F2	0xD00D      	BRA         $+28
;__Lib_Math.c,280 :: 		
0x01F4	0xBE01      	BTFSC       R1, 7, 0
;__Lib_Math.c,281 :: 		
0x01F6	0xD007      	BRA         $+16
;__Lib_Math.c,282 :: 		
0x01F8	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,283 :: 		
0x01FA	0x6E09      	MOVWF       R9, 0
;__Lib_Math.c,284 :: 		
0x01FC	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,285 :: 		
0x01FE	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,286 :: 		
0x0200	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,287 :: 		
0x0202	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,288 :: 		
0x0204	0xD7E8      	BRA         $-46
;__Lib_Math.c,289 :: 		
0x0206	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,290 :: 		
0x0208	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,291 :: 		
0x020A	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,292 :: 		
0x020C	0x0C00      	RETLW       0
;__Lib_Math.c,294 :: 		
0x020E	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,295 :: 		
0x0210	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,296 :: 		
0x0212	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,297 :: 		
0x0214	0xD7DD      	BRA         $-68
;__Lib_Math.c,299 :: 		
0x0216	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,300 :: 		
0x0218	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,301 :: 		
0x021A	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,302 :: 		
0x021C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,303 :: 		
0x021E	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,304 :: 		
0x0220	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,305 :: 		
0x0222	0xD7D9      	BRA         $-76
;__Lib_Math.c,306 :: 		
0x0224	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,307 :: 		
0x0226	0x5C09      	SUBWF       R9, 0, 0
;__Lib_Math.c,308 :: 		
0x0228	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,309 :: 		
0x022A	0xD7D5      	BRA         $-84
;__Lib_Math.c,310 :: 		
0x022C	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,311 :: 		
0x022E	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,312 :: 		
0x0230	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,313 :: 		
0x0232	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,314 :: 		
0x0234	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,315 :: 		
0x0236	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,316 :: 		
0x0238	0xD7CE      	BRA         $-98
;__Lib_Math.c,317 :: 		
0x023A	0x0000      	NOP
;__Lib_Math.c,318 :: 		
0x023C	0x0CFF      	RETLW       255
;__Lib_Math.c,320 :: 		
L_end_Div_16x16_S:
0x023E	0x0012      	RETURN      0
; end of _Div_16x16_S
_main:
;Display7Seg.c,66 :: 		void main(void) {
;Display7Seg.c,70 :: 		ADCON0 = 0X00;
0x0240	0x6AC2      	CLRF        ADCON0 
;Display7Seg.c,71 :: 		ADCON1 = 0X06;  	// desabilita conversor A/D.
0x0242	0x0E06      	MOVLW       6
0x0244	0x6EC1      	MOVWF       ADCON1 
;Display7Seg.c,72 :: 		INTCON = 0;    	// desabilita interrupcoes.
0x0246	0x6AF2      	CLRF        INTCON 
;Display7Seg.c,73 :: 		TRISA  = 0;    	// configura portA como saida.
0x0248	0x6A92      	CLRF        TRISA 
;Display7Seg.c,74 :: 		PORTA  = 0;
0x024A	0x6A80      	CLRF        PORTA 
;Display7Seg.c,75 :: 		TRISD  = 0;    	// configura portD como saida.
0x024C	0x6A95      	CLRF        TRISD 
;Display7Seg.c,76 :: 		PORTD  = 0;
0x024E	0x6A83      	CLRF        PORTD 
;Display7Seg.c,77 :: 		TRISB = 0xFF; //Configura PORTB como saida
0x0250	0x0EFF      	MOVLW       255
0x0252	0x6E93      	MOVWF       TRISB 
;Display7Seg.c,78 :: 		TRISC = 0b11111101; //Configura PORTC 1 como saida e o resto entrada
0x0254	0x0EFD      	MOVLW       253
0x0256	0x6E94      	MOVWF       TRISC 
;Display7Seg.c,80 :: 		segundos = 0;
0x0258	0x6A15      	CLRF        main_segundos_L0 
0x025A	0x6A16      	CLRF        main_segundos_L0+1 
;Display7Seg.c,81 :: 		minutos = 0;
0x025C	0x6A17      	CLRF        main_minutos_L0 
0x025E	0x6A18      	CLRF        main_minutos_L0+1 
;Display7Seg.c,82 :: 		Buzzer = 1;
0x0260	0x8282      	BSF         PORTC, 1 
;Display7Seg.c,84 :: 		while(BotInit == 1) {
L_main18:
0x0262	0xA481      	BTFSS       PORTB, 2 
0x0264	0xD0E9      	BRA         L_main19
;Display7Seg.c,85 :: 		if(BotIncremento == 0) {
0x0266	0xB081      	BTFSC       PORTB, 0 
0x0268	0xD04C      	BRA         L_main20
;Display7Seg.c,86 :: 		escreve4Displays(minutos / 10, minutos % 10, segundos / 10, segundos % 10 );
0x026A	0x0E0A      	MOVLW       10
0x026C	0x6E04      	MOVWF       R4 
0x026E	0x0E00      	MOVLW       0
0x0270	0x6E05      	MOVWF       R5 
0x0272	0xF000C017  	MOVFF       main_minutos_L0, R0
0x0276	0xF001C018  	MOVFF       main_minutos_L0+1, R1
0x027A	0xDF7F      	RCALL       _Div_16x16_S
0x027C	0xF01BC000  	MOVFF       R0, FARG_escreve4Displays_num1
0x0280	0xF01CC001  	MOVFF       R1, FARG_escreve4Displays_num1+1
0x0284	0x0E0A      	MOVLW       10
0x0286	0x6E04      	MOVWF       R4 
0x0288	0x0E00      	MOVLW       0
0x028A	0x6E05      	MOVWF       R5 
0x028C	0xF000C017  	MOVFF       main_minutos_L0, R0
0x0290	0xF001C018  	MOVFF       main_minutos_L0+1, R1
0x0294	0xDF72      	RCALL       _Div_16x16_S
0x0296	0xF000C008  	MOVFF       R8, R0
0x029A	0xF001C009  	MOVFF       R9, R1
0x029E	0xF01DC000  	MOVFF       R0, FARG_escreve4Displays_num2
0x02A2	0xF01EC001  	MOVFF       R1, FARG_escreve4Displays_num2+1
0x02A6	0x0E0A      	MOVLW       10
0x02A8	0x6E04      	MOVWF       R4 
0x02AA	0x0E00      	MOVLW       0
0x02AC	0x6E05      	MOVWF       R5 
0x02AE	0xF000C015  	MOVFF       main_segundos_L0, R0
0x02B2	0xF001C016  	MOVFF       main_segundos_L0+1, R1
0x02B6	0xDF61      	RCALL       _Div_16x16_S
0x02B8	0xF01FC000  	MOVFF       R0, FARG_escreve4Displays_num3
0x02BC	0xF020C001  	MOVFF       R1, FARG_escreve4Displays_num3+1
0x02C0	0x0E0A      	MOVLW       10
0x02C2	0x6E04      	MOVWF       R4 
0x02C4	0x0E00      	MOVLW       0
0x02C6	0x6E05      	MOVWF       R5 
0x02C8	0xF000C015  	MOVFF       main_segundos_L0, R0
0x02CC	0xF001C016  	MOVFF       main_segundos_L0+1, R1
0x02D0	0xDF54      	RCALL       _Div_16x16_S
0x02D2	0xF000C008  	MOVFF       R8, R0
0x02D6	0xF001C009  	MOVFF       R9, R1
0x02DA	0xF021C000  	MOVFF       R0, FARG_escreve4Displays_num4
0x02DE	0xF022C001  	MOVFF       R1, FARG_escreve4Displays_num4+1
0x02E2	0xDF06      	RCALL       _escreve4Displays
;Display7Seg.c,87 :: 		segundos++;
0x02E4	0x4A15      	INFSNZ      main_segundos_L0, 1 
0x02E6	0x2A16      	INCF        main_segundos_L0+1, 1 
;Display7Seg.c,88 :: 		if(segundos > 59) {
0x02E8	0x0E80      	MOVLW       128
0x02EA	0x6E00      	MOVWF       R0 
0x02EC	0x0E80      	MOVLW       128
0x02EE	0x1816      	XORWF       main_segundos_L0+1, 0 
0x02F0	0x5C00      	SUBWF       R0, 0 
0x02F2	0xE102      	BNZ         L__main39
0x02F4	0x5015      	MOVF        main_segundos_L0, 0 
0x02F6	0x083B      	SUBLW       59
L__main39:
0x02F8	0xE204      	BC          L_main21
;Display7Seg.c,89 :: 		segundos = 0;
0x02FA	0x6A15      	CLRF        main_segundos_L0 
0x02FC	0x6A16      	CLRF        main_segundos_L0+1 
;Display7Seg.c,90 :: 		minutos++;
0x02FE	0x4A17      	INFSNZ      main_minutos_L0, 1 
0x0300	0x2A18      	INCF        main_minutos_L0+1, 1 
;Display7Seg.c,91 :: 		}
L_main21:
;Display7Seg.c,92 :: 		}
L_main20:
;Display7Seg.c,93 :: 		if(BotDecremento == 0) {
0x0302	0xB281      	BTFSC       PORTB, 1 
0x0304	0xD05B      	BRA         L_main22
;Display7Seg.c,94 :: 		escreve4Displays(minutos / 10, minutos % 10, segundos / 10, segundos % 10 );
0x0306	0x0E0A      	MOVLW       10
0x0308	0x6E04      	MOVWF       R4 
0x030A	0x0E00      	MOVLW       0
0x030C	0x6E05      	MOVWF       R5 
0x030E	0xF000C017  	MOVFF       main_minutos_L0, R0
0x0312	0xF001C018  	MOVFF       main_minutos_L0+1, R1
0x0316	0xDF31      	RCALL       _Div_16x16_S
0x0318	0xF01BC000  	MOVFF       R0, FARG_escreve4Displays_num1
0x031C	0xF01CC001  	MOVFF       R1, FARG_escreve4Displays_num1+1
0x0320	0x0E0A      	MOVLW       10
0x0322	0x6E04      	MOVWF       R4 
0x0324	0x0E00      	MOVLW       0
0x0326	0x6E05      	MOVWF       R5 
0x0328	0xF000C017  	MOVFF       main_minutos_L0, R0
0x032C	0xF001C018  	MOVFF       main_minutos_L0+1, R1
0x0330	0xDF24      	RCALL       _Div_16x16_S
0x0332	0xF000C008  	MOVFF       R8, R0
0x0336	0xF001C009  	MOVFF       R9, R1
0x033A	0xF01DC000  	MOVFF       R0, FARG_escreve4Displays_num2
0x033E	0xF01EC001  	MOVFF       R1, FARG_escreve4Displays_num2+1
0x0342	0x0E0A      	MOVLW       10
0x0344	0x6E04      	MOVWF       R4 
0x0346	0x0E00      	MOVLW       0
0x0348	0x6E05      	MOVWF       R5 
0x034A	0xF000C015  	MOVFF       main_segundos_L0, R0
0x034E	0xF001C016  	MOVFF       main_segundos_L0+1, R1
0x0352	0xDF13      	RCALL       _Div_16x16_S
0x0354	0xF01FC000  	MOVFF       R0, FARG_escreve4Displays_num3
0x0358	0xF020C001  	MOVFF       R1, FARG_escreve4Displays_num3+1
0x035C	0x0E0A      	MOVLW       10
0x035E	0x6E04      	MOVWF       R4 
0x0360	0x0E00      	MOVLW       0
0x0362	0x6E05      	MOVWF       R5 
0x0364	0xF000C015  	MOVFF       main_segundos_L0, R0
0x0368	0xF001C016  	MOVFF       main_segundos_L0+1, R1
0x036C	0xDF06      	RCALL       _Div_16x16_S
0x036E	0xF000C008  	MOVFF       R8, R0
0x0372	0xF001C009  	MOVFF       R9, R1
0x0376	0xF021C000  	MOVFF       R0, FARG_escreve4Displays_num4
0x037A	0xF022C001  	MOVFF       R1, FARG_escreve4Displays_num4+1
0x037E	0xDEB8      	RCALL       _escreve4Displays
;Display7Seg.c,95 :: 		segundos--;
0x0380	0x0E01      	MOVLW       1
0x0382	0x5E15      	SUBWF       main_segundos_L0, 1 
0x0384	0x0E00      	MOVLW       0
0x0386	0x5A16      	SUBWFB      main_segundos_L0+1, 1 
;Display7Seg.c,96 :: 		if(segundos <=0) {
0x0388	0x0E80      	MOVLW       128
0x038A	0x6E00      	MOVWF       R0 
0x038C	0x0E80      	MOVLW       128
0x038E	0x1816      	XORWF       main_segundos_L0+1, 0 
0x0390	0x5C00      	SUBWF       R0, 0 
0x0392	0xE102      	BNZ         L__main40
0x0394	0x5015      	MOVF        main_segundos_L0, 0 
0x0396	0x0800      	SUBLW       0
L__main40:
0x0398	0xE311      	BNC         L_main23
;Display7Seg.c,97 :: 		if(minutos == 0) {
0x039A	0x0E00      	MOVLW       0
0x039C	0x1818      	XORWF       main_minutos_L0+1, 0 
0x039E	0xE102      	BNZ         L__main41
0x03A0	0x0E00      	MOVLW       0
0x03A2	0x1817      	XORWF       main_minutos_L0, 0 
L__main41:
0x03A4	0xE103      	BNZ         L_main24
;Display7Seg.c,98 :: 		segundos = 0;
0x03A6	0x6A15      	CLRF        main_segundos_L0 
0x03A8	0x6A16      	CLRF        main_segundos_L0+1 
;Display7Seg.c,99 :: 		} else {
0x03AA	0xD008      	BRA         L_main25
L_main24:
;Display7Seg.c,100 :: 		segundos = 59;
0x03AC	0x0E3B      	MOVLW       59
0x03AE	0x6E15      	MOVWF       main_segundos_L0 
0x03B0	0x0E00      	MOVLW       0
0x03B2	0x6E16      	MOVWF       main_segundos_L0+1 
;Display7Seg.c,101 :: 		minutos--;
0x03B4	0x0E01      	MOVLW       1
0x03B6	0x5E17      	SUBWF       main_minutos_L0, 1 
0x03B8	0x0E00      	MOVLW       0
0x03BA	0x5A18      	SUBWFB      main_minutos_L0+1, 1 
;Display7Seg.c,102 :: 		}
L_main25:
;Display7Seg.c,103 :: 		}
L_main23:
;Display7Seg.c,104 :: 		}
L_main22:
;Display7Seg.c,105 :: 		escreve4Displays(minutos / 10, minutos % 10, segundos / 10, segundos % 10 );
0x03BC	0x0E0A      	MOVLW       10
0x03BE	0x6E04      	MOVWF       R4 
0x03C0	0x0E00      	MOVLW       0
0x03C2	0x6E05      	MOVWF       R5 
0x03C4	0xF000C017  	MOVFF       main_minutos_L0, R0
0x03C8	0xF001C018  	MOVFF       main_minutos_L0+1, R1
0x03CC	0xDED6      	RCALL       _Div_16x16_S
0x03CE	0xF01BC000  	MOVFF       R0, FARG_escreve4Displays_num1
0x03D2	0xF01CC001  	MOVFF       R1, FARG_escreve4Displays_num1+1
0x03D6	0x0E0A      	MOVLW       10
0x03D8	0x6E04      	MOVWF       R4 
0x03DA	0x0E00      	MOVLW       0
0x03DC	0x6E05      	MOVWF       R5 
0x03DE	0xF000C017  	MOVFF       main_minutos_L0, R0
0x03E2	0xF001C018  	MOVFF       main_minutos_L0+1, R1
0x03E6	0xDEC9      	RCALL       _Div_16x16_S
0x03E8	0xF000C008  	MOVFF       R8, R0
0x03EC	0xF001C009  	MOVFF       R9, R1
0x03F0	0xF01DC000  	MOVFF       R0, FARG_escreve4Displays_num2
0x03F4	0xF01EC001  	MOVFF       R1, FARG_escreve4Displays_num2+1
0x03F8	0x0E0A      	MOVLW       10
0x03FA	0x6E04      	MOVWF       R4 
0x03FC	0x0E00      	MOVLW       0
0x03FE	0x6E05      	MOVWF       R5 
0x0400	0xF000C015  	MOVFF       main_segundos_L0, R0
0x0404	0xF001C016  	MOVFF       main_segundos_L0+1, R1
0x0408	0xDEB8      	RCALL       _Div_16x16_S
0x040A	0xF01FC000  	MOVFF       R0, FARG_escreve4Displays_num3
0x040E	0xF020C001  	MOVFF       R1, FARG_escreve4Displays_num3+1
0x0412	0x0E0A      	MOVLW       10
0x0414	0x6E04      	MOVWF       R4 
0x0416	0x0E00      	MOVLW       0
0x0418	0x6E05      	MOVWF       R5 
0x041A	0xF000C015  	MOVFF       main_segundos_L0, R0
0x041E	0xF001C016  	MOVFF       main_segundos_L0+1, R1
0x0422	0xDEAB      	RCALL       _Div_16x16_S
0x0424	0xF000C008  	MOVFF       R8, R0
0x0428	0xF001C009  	MOVFF       R9, R1
0x042C	0xF021C000  	MOVFF       R0, FARG_escreve4Displays_num4
0x0430	0xF022C001  	MOVFF       R1, FARG_escreve4Displays_num4+1
0x0434	0xDE5D      	RCALL       _escreve4Displays
;Display7Seg.c,106 :: 		}
0x0436	0xD715      	BRA         L_main18
L_main19:
;Display7Seg.c,107 :: 		while((minutos > 0) || (segundos > 0)) {
L_main26:
0x0438	0x0E80      	MOVLW       128
0x043A	0x6E00      	MOVWF       R0 
0x043C	0x0E80      	MOVLW       128
0x043E	0x1818      	XORWF       main_minutos_L0+1, 0 
0x0440	0x5C00      	SUBWF       R0, 0 
0x0442	0xE102      	BNZ         L__main42
0x0444	0x5017      	MOVF        main_minutos_L0, 0 
0x0446	0x0800      	SUBLW       0
L__main42:
0x0448	0xE30A      	BNC         L__main35
0x044A	0x0E80      	MOVLW       128
0x044C	0x6E00      	MOVWF       R0 
0x044E	0x0E80      	MOVLW       128
0x0450	0x1816      	XORWF       main_segundos_L0+1, 0 
0x0452	0x5C00      	SUBWF       R0, 0 
0x0454	0xE102      	BNZ         L__main43
0x0456	0x5015      	MOVF        main_segundos_L0, 0 
0x0458	0x0800      	SUBLW       0
L__main43:
0x045A	0xE301      	BNC         L__main35
0x045C	0xD065      	BRA         L_main27
L__main35:
;Display7Seg.c,108 :: 		tempAux = 50;
0x045E	0x0E32      	MOVLW       50
0x0460	0x6E19      	MOVWF       main_tempAux_L0 
0x0462	0x0E00      	MOVLW       0
0x0464	0x6E1A      	MOVWF       main_tempAux_L0+1 
;Display7Seg.c,109 :: 		while(tempAux > 0) {
L_main30:
0x0466	0x0E80      	MOVLW       128
0x0468	0x6E00      	MOVWF       R0 
0x046A	0x0E80      	MOVLW       128
0x046C	0x181A      	XORWF       main_tempAux_L0+1, 0 
0x046E	0x5C00      	SUBWF       R0, 0 
0x0470	0xE102      	BNZ         L__main44
0x0472	0x5019      	MOVF        main_tempAux_L0, 0 
0x0474	0x0800      	SUBLW       0
L__main44:
0x0476	0xE242      	BC          L_main31
;Display7Seg.c,110 :: 		escreve4Displays(minutos / 10, minutos % 10, segundos / 10, segundos % 10 );
0x0478	0x0E0A      	MOVLW       10
0x047A	0x6E04      	MOVWF       R4 
0x047C	0x0E00      	MOVLW       0
0x047E	0x6E05      	MOVWF       R5 
0x0480	0xF000C017  	MOVFF       main_minutos_L0, R0
0x0484	0xF001C018  	MOVFF       main_minutos_L0+1, R1
0x0488	0xDE78      	RCALL       _Div_16x16_S
0x048A	0xF01BC000  	MOVFF       R0, FARG_escreve4Displays_num1
0x048E	0xF01CC001  	MOVFF       R1, FARG_escreve4Displays_num1+1
0x0492	0x0E0A      	MOVLW       10
0x0494	0x6E04      	MOVWF       R4 
0x0496	0x0E00      	MOVLW       0
0x0498	0x6E05      	MOVWF       R5 
0x049A	0xF000C017  	MOVFF       main_minutos_L0, R0
0x049E	0xF001C018  	MOVFF       main_minutos_L0+1, R1
0x04A2	0xDE6B      	RCALL       _Div_16x16_S
0x04A4	0xF000C008  	MOVFF       R8, R0
0x04A8	0xF001C009  	MOVFF       R9, R1
0x04AC	0xF01DC000  	MOVFF       R0, FARG_escreve4Displays_num2
0x04B0	0xF01EC001  	MOVFF       R1, FARG_escreve4Displays_num2+1
0x04B4	0x0E0A      	MOVLW       10
0x04B6	0x6E04      	MOVWF       R4 
0x04B8	0x0E00      	MOVLW       0
0x04BA	0x6E05      	MOVWF       R5 
0x04BC	0xF000C015  	MOVFF       main_segundos_L0, R0
0x04C0	0xF001C016  	MOVFF       main_segundos_L0+1, R1
0x04C4	0xDE5A      	RCALL       _Div_16x16_S
0x04C6	0xF01FC000  	MOVFF       R0, FARG_escreve4Displays_num3
0x04CA	0xF020C001  	MOVFF       R1, FARG_escreve4Displays_num3+1
0x04CE	0x0E0A      	MOVLW       10
0x04D0	0x6E04      	MOVWF       R4 
0x04D2	0x0E00      	MOVLW       0
0x04D4	0x6E05      	MOVWF       R5 
0x04D6	0xF000C015  	MOVFF       main_segundos_L0, R0
0x04DA	0xF001C016  	MOVFF       main_segundos_L0+1, R1
0x04DE	0xDE4D      	RCALL       _Div_16x16_S
0x04E0	0xF000C008  	MOVFF       R8, R0
0x04E4	0xF001C009  	MOVFF       R9, R1
0x04E8	0xF021C000  	MOVFF       R0, FARG_escreve4Displays_num4
0x04EC	0xF022C001  	MOVFF       R1, FARG_escreve4Displays_num4+1
0x04F0	0xDDFF      	RCALL       _escreve4Displays
;Display7Seg.c,111 :: 		tempAux--;
0x04F2	0x0E01      	MOVLW       1
0x04F4	0x5E19      	SUBWF       main_tempAux_L0, 1 
0x04F6	0x0E00      	MOVLW       0
0x04F8	0x5A1A      	SUBWFB      main_tempAux_L0+1, 1 
;Display7Seg.c,112 :: 		}
0x04FA	0xD7B5      	BRA         L_main30
L_main31:
;Display7Seg.c,113 :: 		segundos--;
0x04FC	0x0E01      	MOVLW       1
0x04FE	0x5E15      	SUBWF       main_segundos_L0, 1 
0x0500	0x0E00      	MOVLW       0
0x0502	0x5A16      	SUBWFB      main_segundos_L0+1, 1 
;Display7Seg.c,114 :: 		if(segundos < 0) {
0x0504	0x0E80      	MOVLW       128
0x0506	0x1816      	XORWF       main_segundos_L0+1, 0 
0x0508	0x6E00      	MOVWF       R0 
0x050A	0x0E80      	MOVLW       128
0x050C	0x5C00      	SUBWF       R0, 0 
0x050E	0xE102      	BNZ         L__main45
0x0510	0x0E00      	MOVLW       0
0x0512	0x5C15      	SUBWF       main_segundos_L0, 0 
L__main45:
0x0514	0xE208      	BC          L_main32
;Display7Seg.c,115 :: 		segundos = 59;
0x0516	0x0E3B      	MOVLW       59
0x0518	0x6E15      	MOVWF       main_segundos_L0 
0x051A	0x0E00      	MOVLW       0
0x051C	0x6E16      	MOVWF       main_segundos_L0+1 
;Display7Seg.c,116 :: 		minutos--;
0x051E	0x0E01      	MOVLW       1
0x0520	0x5E17      	SUBWF       main_minutos_L0, 1 
0x0522	0x0E00      	MOVLW       0
0x0524	0x5A18      	SUBWFB      main_minutos_L0+1, 1 
;Display7Seg.c,117 :: 		}
L_main32:
;Display7Seg.c,118 :: 		}
0x0526	0xD788      	BRA         L_main26
L_main27:
;Display7Seg.c,119 :: 		while(1) {
L_main33:
;Display7Seg.c,120 :: 		Buzzer = 0;
0x0528	0x9282      	BCF         PORTC, 1 
;Display7Seg.c,121 :: 		escreve4Displays(minutos / 10, minutos % 10, segundos / 10, segundos % 10 );
0x052A	0x0E0A      	MOVLW       10
0x052C	0x6E04      	MOVWF       R4 
0x052E	0x0E00      	MOVLW       0
0x0530	0x6E05      	MOVWF       R5 
0x0532	0xF000C017  	MOVFF       main_minutos_L0, R0
0x0536	0xF001C018  	MOVFF       main_minutos_L0+1, R1
0x053A	0xDE1F      	RCALL       _Div_16x16_S
0x053C	0xF01BC000  	MOVFF       R0, FARG_escreve4Displays_num1
0x0540	0xF01CC001  	MOVFF       R1, FARG_escreve4Displays_num1+1
0x0544	0x0E0A      	MOVLW       10
0x0546	0x6E04      	MOVWF       R4 
0x0548	0x0E00      	MOVLW       0
0x054A	0x6E05      	MOVWF       R5 
0x054C	0xF000C017  	MOVFF       main_minutos_L0, R0
0x0550	0xF001C018  	MOVFF       main_minutos_L0+1, R1
0x0554	0xDE12      	RCALL       _Div_16x16_S
0x0556	0xF000C008  	MOVFF       R8, R0
0x055A	0xF001C009  	MOVFF       R9, R1
0x055E	0xF01DC000  	MOVFF       R0, FARG_escreve4Displays_num2
0x0562	0xF01EC001  	MOVFF       R1, FARG_escreve4Displays_num2+1
0x0566	0x0E0A      	MOVLW       10
0x0568	0x6E04      	MOVWF       R4 
0x056A	0x0E00      	MOVLW       0
0x056C	0x6E05      	MOVWF       R5 
0x056E	0xF000C015  	MOVFF       main_segundos_L0, R0
0x0572	0xF001C016  	MOVFF       main_segundos_L0+1, R1
0x0576	0xDE01      	RCALL       _Div_16x16_S
0x0578	0xF01FC000  	MOVFF       R0, FARG_escreve4Displays_num3
0x057C	0xF020C001  	MOVFF       R1, FARG_escreve4Displays_num3+1
0x0580	0x0E0A      	MOVLW       10
0x0582	0x6E04      	MOVWF       R4 
0x0584	0x0E00      	MOVLW       0
0x0586	0x6E05      	MOVWF       R5 
0x0588	0xF000C015  	MOVFF       main_segundos_L0, R0
0x058C	0xF001C016  	MOVFF       main_segundos_L0+1, R1
0x0590	0xDDF4      	RCALL       _Div_16x16_S
0x0592	0xF000C008  	MOVFF       R8, R0
0x0596	0xF001C009  	MOVFF       R9, R1
0x059A	0xF021C000  	MOVFF       R0, FARG_escreve4Displays_num4
0x059E	0xF022C001  	MOVFF       R1, FARG_escreve4Displays_num4+1
0x05A2	0xDDA6      	RCALL       _escreve4Displays
;Display7Seg.c,122 :: 		}
0x05A4	0xD7C1      	BRA         L_main33
;Display7Seg.c,125 :: 		}   // Fim do programa principal.
L_end_main:
0x05A6	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [88]    _Div_16x16_S_L
0x0074     [124]    _mask
0x00F0     [138]    _escreve4Displays
0x017A     [198]    _Div_16x16_S
0x0240     [872]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    main_segundos_L0
0x0017       [2]    main_minutos_L0
0x0019       [2]    main_tempAux_L0
0x001B       [2]    FARG_escreve4Displays_num1
0x001D       [2]    FARG_escreve4Displays_num2
0x001F       [2]    FARG_escreve4Displays_num3
0x0021       [2]    FARG_escreve4Displays_num4
0x0023       [1]    FARG_mask_num
0x0F80       [1]    PORTA
0x0F81       [1]    PORTB
0x0F82       [1]    PORTC
0x0F83       [1]    PORTD
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
